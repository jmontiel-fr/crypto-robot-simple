#!/usr/bin/env python3
"""
Script de d√©marrage de l'application web du crypto trading robot
avec toutes les nouvelles fonctionnalit√©s (Socket.IO activ√©)
"""

import sys
import os

# Ajouter le r√©pertoire parent (racine du projet) au PYTHONPATH
PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if PROJECT_ROOT not in sys.path:
    sys.path.insert(0, PROJECT_ROOT)


def main():
    """D√©marrer l'application web"""
    try:
        print("D√©marrage de l'application Crypto Trading Robot")
        print("=" * 50)

        # Import de l'application compl√®te (avec Socket.IO)
        from src.web_app import app, socketio

        print("‚úÖ Application charg√©e avec succ√®s")
        print("\nüìã Fonctionnalit√©s disponibles:")
        print("   ‚Ä¢ Dashboard principal avec statut temps r√©el")
        print("   ‚Ä¢ Bouton Freeze/Unfreeze Robot")
        print("   ‚Ä¢ Simulateur de trading et historique")
        print("   ‚Ä¢ Historiques de portfolio et r√©serves")

        print("\nüåê Interface web:")
        print("   ‚Ä¢ Dashboard principal: http://localhost:5000")
        print("   ‚Ä¢ Simulateur: http://localhost:5000/simulator")

        print("\nüéØ D√©marrage du serveur web...")
        print("   Appuyez sur Ctrl+C pour arr√™ter")
        print("=" * 50)

        # D√©marrer l'application avec Socket.IO (sans reloader pour conserver les threads)
        socketio.run(
            app,
            host='0.0.0.0',
            port=5000,
            debug=False,
            use_reloader=False,
        )
        return True

    except ImportError as e:
        print(f"‚ùå Erreur d'import: {e}")
        print("\nüí° Solutions possibles:")
        print("   1. V√©rifiez que vous √™tes dans le bon r√©pertoire")
        print("   2. Installez les d√©pendances: pip install -r requirements.txt")
        print("   3. Activez l'environnement virtuel si n√©cessaire")
        return False

    except Exception as e:
        print(f"‚ùå Erreur lors du d√©marrage: {e}")
        return False


if __name__ == "__main__":
    main()
